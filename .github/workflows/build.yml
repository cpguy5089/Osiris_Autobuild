name: Autobuild
# Shoutout to ChatGPT for helping me work through this cause I don't know anything
on:
  workflow_dispatch:
  push:
  
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      
#      - name: Install Visual Studio Build Tools
#        run: |
#          choco install visualstudio2019buildtools --package-parameters "--includeRecommended --includeOptional"
#          choco install visualstudio2019-workload-vctools --package-parameters "--includeRecommended --includeOptional"

#      - name: Build Solution
#        run: |
#          "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin\MSBuild.exe /p:Configuration=Release /p:Platform=x86 Osiris.sln"
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build app for release
        run: msbuild Osiris.sln -property:Configuration=Release -property:Platform=x86
 # the dll builds properly here but disappears down the line??? huh???
 # D:\a\Osiris_Autobuild\Osiris_Autobuild\Release\Osiris.dll
 # Relative: Release\Osiris.dll
 
  release:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get current time
        id: current_time
        run: echo "::set-output name=time::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
    
#      - name: Set release tag
#        uses: actions/github-script@v4
#        with:
#          script: |
#            const time = '${{ steps.current_time.outputs.time }}'
#            const tag = `v${time.replace(/[-T:Z]/g, '')}`
#            github.git.createRef({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              ref: `refs/tags/${tag}`,
#              sha: context.sha
#            })
#          github-token: ${{ secrets.GITHUB_TOKEN }}

#      - name: Create release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ steps.set_release_tag.outputs.result }}
#          release_name: Release ${{ steps.set_release_tag.outputs.result }}
#          body: |
#            This is the release of the project with tag ${{ steps.set_release_tag.outputs.result }}.
#          draft: false
#          prerelease: false

#      - name: Upload assets
#        id: upload_assets
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: Osiris\bin\Release\Osiris.dll
#          asset_name: Osiris-${{ steps.set_release_tag.outputs.result }}.dll
#          asset_content_type: application/octet-stream


      - name: DebuggingTime
        run: tree /f

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: OsirisDLL
          path: Osiris.dll
          
      - name: Download Release Artifact
        uses: actions/download-artifact@v2.0.9
        with:
          name: OsirisDLL

      - name: Automatic Releases
        uses: marvinpinto/action-automatic-releases@latest
        id: "automatic_releases"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          files: |
            Osiris.dll
